fold_num: 0
run_name: experiment
checkpoint_path: /kaggle/working/
model_save_dir: /kaggle/working/weights_stage2_fold=0.pt
seed: 42
use_weights: true
image_dir: /kaggle/input/cassava-leaf-disease-classification/train_images
csv_dir: /kaggle/input/cassava-leaf-disease-classification/train.csv
json_dir: /kaggle/input/cassava-leaf-disease-classification/label_num_to_disease_map.json
fold_csv_dir: /kaggle/working/leaf-disease-classification-kaggle/data/fold_df.csv
save_pytorch_model: true
run: experiment
model:
  class_name: timm.create_model
  params:
    pretrained: true
    model_name: efficientnet_b3a
  output_dims: 1000
  fc1: 512
  fc2: 256
  num_classes: ${training.num_classes}
  use_custom_base: false
training:
  seed: ${seed}
  job_name: ${run_name}
  checkpoint_path: ${checkpoint_path}
  model_save_dir: ${model_save_dir}
  num_epochs: 30
  total_steps: null
  lr: 0.01
  num_classes: 5
  image_dim: 224
  metric: val_loss
  dataloaders:
    batch_size: 128
    pin_memory: true
    num_workers: 5
lightning:
  callbacks:
  - class_name: pytorch_lightning.callbacks.LearningRateMonitor
    params:
      logging_interval: step
  - class_name: pytorch_lightning.callbacks.EarlyStopping
    params:
      monitor: ${training.metric}
      patience: 5
      mode: min
  model_checkpoint:
    filepath: ${training.checkpoint_path}
    monitor: ${training.metric}
    mode: min
    save_top_k: 1
  init_args:
    precision: 16
    gpus: 1
    log_every_n_steps: 10
    max_epochs: ${training.num_epochs}
    benchmark: true
    gradient_clip_val: 0
    max_steps: ${training.total_steps}
    check_val_every_n_epoch: 1
    weights_summary: top
    terminate_on_nan: true
    tpu_cores: null
    progress_bar_refresh_rate: 1
    accumulate_grad_batches: 1
    num_sanity_val_steps: 2
    amp_backend: native
    plugins: null
optimizer:
  class_name: torch.optim.AdamW
  params:
    lr: ${training.lr}
    weight_decay: 0.01
scheduler:
  class_name: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
  params:
    T_0: 10
    T_mult: 2
  interval: step
  frequency: 1
  monitor: null
logger:
  api: a74f67fd5fae293e301ea8b6710ee0241f595a63
  project: kaggle-leaf-disease
  run_name: ${training.job_name}
  class_name: pytorch_lightning.loggers.WandbLogger
  params:
    project: ${logger.project}
    name: ${logger.run_name}
augmentation:
  train_augs:
  - class_name: albumentations.RandomResizedCrop
    params:
      height: ${training.image_dim}
      width: ${training.image_dim}
      p: 1.0
  - class_name: albumentations.Transpose
    params:
      p: 0.5
  - class_name: albumentations.HorizontalFlip
    params:
      p: 0.5
  - class_name: albumentations.RandomBrightnessContrast
    params:
      p: 0.5
  - class_name: albumentations.ShiftScaleRotate
    params:
      p: 0.5
  - class_name: albumentations.Normalize
    params:
      max_pixel_value: 255.0
      p: 1.0
  - class_name: albumentations.CoarseDropout
    params:
      p: 0.5
  - class_name: albumentations.Cutout
    params:
      p: 0.5
  - class_name: albumentations.pytorch.transforms.ToTensorV2
    params:
      p: 1.0
  valid_augs:
  - class_name: albumentations.Resize
    params:
      height: ${training.image_dim}
      width: ${training.image_dim}
      p: 1.0
  - class_name: albumentations.Normalize
    params:
      max_pixel_value: 255.0
      p: 1.0
  - class_name: albumentations.pytorch.transforms.ToTensorV2
    params:
      p: 1.0
  test_augs:
  - class_name: albumentations.Resize
    params:
      height: ${training.image_dim}
      width: ${training.image_dim}
      p: 1.0
  - class_name: albumentations.Normalize
    params:
      max_pixel_value: 255.0
      p: 1.0
  - class_name: albumentations.pytorch.transforms.ToTensorV2
    params:
      p: 1.0
